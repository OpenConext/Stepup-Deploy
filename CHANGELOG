Release 7
RA Locations, Institution configuration, Server-side session expiry

* Added per institution configuration through the middleware API of the way the RA location are shown to users in the
  selfservice interface and email.
  - The RAA contacts can be hidden, so only RA contacts are shown. Defaults to old behaviour (show both RA and RAA contacts)
  - Instead of RA(A) contacts RA locations can be shown. When enabled the RAA of an institution can edit the list of the
    RA locations through the RA interface. Defaults to old behaviour (show RA(A) contacts)
  - Added an institution configuration for enabling/disabling the above two options. Configuration though the template
    in <inventory>/templates/middleware/middleware-institution.json
    See https://github.com/SURFnet/Stepup-Middleware/blob/2.0.2/README.md for configuration format
  - The email template for 'registration_code' in middleware-config.json.j2 is replaced by 'registration_code_with_ras'
    and 'registration_code_with_ra_locations'.
    See https://github.com/SURFnet/Stepup-Middleware/blob/2.0.2/README.md for configuration format
* Added server side session timeouts based on absolute (since login) and relative (since last client interaction with the
  server) through "app_session_max_duration" and "app_session_expiry_time" group_vars.
* RA interface changes
  - Show the document number in the tokens overview in the RA interface (requires event replay)
  - The time in the audit log is now shown in the timezone configured in the webbrowser instead of in UTC
* The Selfservice, RA and Gateway now set/update a HTTP cookie named "stepup_locale" with the current known preferred
  locale of the user. The domain for which the cookie is set is configured through the "locale_cookie_domain" group_var.
* Various minor UI layout fixes/improvements.
* tiqr fixes
  - solves a problem with iOS10 devices
  - small layout en translation improvements


Install:
* Deploy components
  - Middleware 2.0.2
  - Gateway 2.2.0
  - Selfservice 2.2.0
  - RA 2.2.0
  - tiqr 1.1.4

* Run database migrations
  - Run "/root/01-middleware-db_migrate.sh" on an app server

* Replay eventlog
  - Prevent changes during the replay by taken middleware offline (or take the SS and RA offline)
  - Change to middleware directory (e.g. /opt/www/middleware.example.org)
  - Run "php app/console middleware:event:replay --env=prod_event_replay" on an app server
    The replay runs in a single database transaction. It replays all events en recreates the projections. This may take
    some time depending on the number of events in the events table.


Release 6
Ansible 2, Second factor only (SFO) authentication, biometric authentication type

* Deploy now requires Ansible 2
* Set "serial: 1" in site.yml playbook, to deploy one host at a time, even when more than one host is targeted
* Add second factory only (SFO) authentication to the GW, disabled by default
* Add support for a "biometric" authentication type using GSSP
* Added vars for SFO: gateway_second_factor_only, stepup_uri_sfo_loa2, stepup_uri_sfo_loa3
* Added var for stepup cookie domain: locale_cookie_domain
* Service providers in the middleware configuration require two new configuration keys. To keep the current
  behaviour add:
    "second_factor_only": false,
    "second_factor_only_nameid_patterns": [],
* Add translations for tiqr error messages, fix regression error in tiqr userId

Install:
* Run the app role from the site.yml playbook
* Deploy components
  - Middleware 1.6.0
  - Gateway 2.0.0
  - SelfService 1.4.0
  - RA 1.4.0
  - tiqr 1.1.3


Release 5.2
Infrastucture changes: Read-only accounts for external access to middleware and gateway databases,
SMTP smarthost and disable IPv6

Security: Block HTTP Proxy header in haproxy and nginx (CVE-2016-5385)

* Optionally use SMTP smarthost on servers with app role. Configuration through sendmail_smarthost in group_vars/app.yml
* Optionally create gateway_ro and middleware_ro accounts for read only access to the gateway and middleware databases
  Configuration in group_vars/dbcluser.yml though database_(gateway|middleware)_readonly_(user|password)
* Disable IPv6

Install:
* Run the dbcluster, lb and app roles from the site.yml playbook
* Deploy component
  - none


Release 5.1 (hotfix)
Hotfixes for loadbalancer configuration (fixes issues with tiqr registration)

* Updated sysctl-local.conf to allow nonlocal binds
* Updated nginx.yml tasks and nginx.vhost.conf.j2 template to have nginx listen on dedicated IP addresses

Install:
* Run the lb role from the site.yml playbook
* Deploy component
  - none


Release 5
Allow scripted / automated middleware configuration updates from remote

* Moved the 02-middleware-config.sh and 04-middleware-whitelist.sh scripts from root to /opt/scripts and made these scripts
  executable by the stepup-deploy user. The scripts in /root/ are replaced by symlinks
  The configuration (middleware-config.json and middleware-whitelist.json) is now stored in /opt/scripts
* Added app group_vars: app_deploy_user_ssh_key and app_deploy_user_ssh_from
* Updated push-mw-config.yml and push-mw-whitelist.yml playbooks to use the stepup-deploy user
* Added scrips/push-config.sh script

Install:
* Run the app role from the site.yml playbook
* Deploy component
  - Middleware 1.4.0
    Note: Do redeploy if 1.4.0 is already installed because of updates in the stepup-middleware that update the middleware
          configuration scrips


Release 4
* Moved the PHP session dir from /var/lib/php/session/ to /var/lib/stepup/session/. The contents of the old directory can be removed
* Tighten PHP session configuration in php.ini. Use /dev/urandom for entropy, set session.cookie_secure = session.cookie_httponly = session.hash_function = 1;
* Added app_session_expiry_time and (currently unused app_session_max_duration group_vars
* Set session.cookie_domain and session.cookie_(gc_max)lifetime in fpm.ini
* Added stepup_enabled_factors group_var to control which 2nd factors are enabled
* A database schema for u2f was added. Added database_u2f_(name|user|password) group_vars
* Added /root/01-gateway-db_migrate.sh script
* A added a /etc/cron.d/curator job on manage node that runs "curator" to delete old logstash indexes. The manage_keep_logs_days group_var configures how many days of logs to keep
* Added stepup_enabled_factors group_var to control which 2nf factors are enabled in SS, RA and GW
* Update scripts from https://github.com/pmeulen/ansible-tools
* A deploy user for the gateway component was added with corresponding database_gateway_deploy_(user|password)

Install:
* Run site.yml playbook on all hosts
* Deploy components:
  - Middleware 1.4.0
  - Gateway 1.3.3
  - SelfService 1.3.1
  - RA 1.3.1
  - Tiqr 1.1.0
  - oath-service-php 1.0.1
* Run DB migrations
  - /root/01-middleware-db_migrate.sh
  - /root/01-gateway-db_migrate.sh
