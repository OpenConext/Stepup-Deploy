# group_vars/all: Variables visible in all roles

# Location of the keystore directory on the deploy host
vault_keydir: "{{ inventory_dir }}/stepup-ansible-keystore"

# Directory for keeping files on the remote host for use
# by the playbook
managed_file_dir: /opt/ansible/managed_files

# Timezone
# Format: IANA tz zone name (e.g. "Europe/Amsterdam")
timezone: Europe/Amsterdam

# Administrative email address
server_admin_email: admin@stepup.example.com

# "noreply" email address
noreply_email: noreply@stepup.example.com
noreply_email_name: Step-up Example

# FQDN for vhosts
# TODO: Set vhostnames
middleware_vhost_name: middleware.stepup.example.com
selfservice_vhost_name: selfservice.stepup.example.com
ra_vhost_name: ra.stepup.example.com
gateway_vhost_name: gateway.stepup.example.com
tiqr_vhost_name: tiqr.stepup.example.com
keyserver_vhost_name: keyserver.stepup.example.com

# Domain for the locale cookie that is set by gateway, selfservice and ra and that is used to share the
# user's locale preference with other (stepup) components
# TODO: Set cookie domain
locale_cookie_domain: stepup.example.com


# The uri's that are used to define the LoA levels used in AuthnContextClassRef
# TODO: Set LoA uri's
stepup_uri_loa1: 'http://stepup.example.com/assurance/loa1'
stepup_uri_loa2: 'http://stepup.example.com/assurance/loa2'
stepup_uri_loa3: 'http://stepup.example.com/assurance/loa3'
# uri's used by the second factor only (SFO) endpoint
stepup_uri_sfo_loa2: 'http://stepup.example.com/assurance/sfo-level2'
stepup_uri_sfo_loa3: 'http://stepup.example.com/assurance/sfo-level3'

# The build in second factor types to enable in the SS and the RA
# Format: comma separated list of factors to enable
# Supported factors: sms, yubikey, u2f
stepup_enabled_factors: sms, yubikey, u2f

# The generic second factor types to enable in the SS and the RA
stepup_enabled_generic_second_factors:
  tiqr:
    loa: 2
  biometric:
    loa: 2

# Public SAML signing key of the gateway IdP
# Private key in stepup-gateway.yml
# Format: PEM X.509 certificate
gateway_saml_idp_publickey: "{{ lookup('file', inventory_dir+'/saml_cert/gateway_saml_idp.crt') }}"

# Public SAML signing key of selfservice SP
# Private key in stepup-selfservice.yml
# Format: PEM X.509 certificate
selfservice_saml_sp_publickey: "{{ lookup('file', inventory_dir+'/saml_cert/selfservice_saml_sp.crt') }}"

# Public SAML signing key of RA SP
# Private key in stepup-ra.yml
# Format: PEM X.509 certificate
ra_saml_sp_publickey: "{{ lookup('file', inventory_dir+'/saml_cert/ra_saml_sp.crt') }}"

# Public SAML signing key of the Tiqr gateway
# IdP for the Tiqr authentication gateway that is used by the SS and RA Tiqr SP endpoints
# Private key in stepup-gateway.yml
# Format: PEM X.509 certificate
gateway_tiqr_idp_publickey: "{{ lookup('file', inventory_dir+'/saml_cert/gateway_tiqr_idp.crt') }}"

# Public SAML signing key of the Tiqr IDP
# Private key in stepup-tiqr.yml
# Format: PEM X.509 certificate
tiqr_idp_publickey: "{{ lookup('file', inventory_dir+'/saml_cert/tiqr_idp.crt') }}"

# Database tables and users for Stepup applications, keyserver
# Used by dbcluster role to create users and tables

# Used by stepup-middleware role to configure middleware
database_middleware_name: middleware
database_middleware_user: middleware
database_middleware_password: "{{ lookup('file', inventory_dir+'/password/database_middleware') }}"
database_middleware_deploy_user: middleware-deploy
database_middleware_deploy_password: "{{ lookup('file', inventory_dir+'/password/database_middleware_deploy') }}"
database_gateway_name: gateway
database_gateway_user: gateway
database_gateway_password: "{{ lookup('file', inventory_dir+'/password/database_gateway') }}"
database_gateway_deploy_user: gateway-deploy
database_gateway_deploy_password: "{{ lookup('file', inventory_dir+'/password/database_gateway_deploy') }}"


# Used by stepup-tiqr role to configure tiqr
database_tiqr_name: tiqr
database_tiqr_user: tiqr
database_tiqr_password: "{{ lookup('file', inventory_dir+'/password/database_tiqr') }}"
database_tiqr_deploy_user: tiqr-deploy
database_tiqr_deploy_password: "{{ lookup('file', inventory_dir+'/password/database_tiqr_deploy') }}"

# Used by stepup-keyserver role to configure keyserver
database_keyserver_name: keyserver
database_keyserver_user: keyserver
database_keyserver_password: "{{ lookup('file', inventory_dir+'/password/database_keyserver') }}"
database_keyserver_deploy_user: keyserver-deploy
database_keyserver_deploy_password: "{{ lookup('file', inventory_dir+'/password/database_keyserver_deploy') }}"

# Used by stepup-gateway role to configure u2f
database_u2f_name: u2f
database_u2f_user: u2f
database_u2f_password: "{{ lookup('file', inventory_dir+'/password/database_u2f') }}"

# The (ip) address to use to access the mariadb database
# TODO: Set to loadbalanced address when using > 1 DB nodes
database_lb_address: "{{ hostvars[groups['dbcluster'][0]]['host_ipv4'] }}" # Use address of first db in the cluster

# The (ip) address to use to access the keyserver
# TODO: Set to loadbalanced address when using > 1 keyservers
keyserver_lb_address: "{{ hostvars[groups['ks'][0]]['host_ipv4'] }}" # Use address of first ks

# The ip address of the loghost server to receive logs
# TODO: Set to address and port of logserver
loghost_relp_address: "{{ hostvars[groups['manage'][0]]['host_ipv4'] }}"
loghost_relp_port: 10514

# The (ip) address to use to access the memcache server
# NOTE: db nodes double as memcache servers
memcache_lb_address: "{{ hostvars[groups['dbcluster'][0]]['host_ipv4'] }}" # Use address of first db in the cluster
