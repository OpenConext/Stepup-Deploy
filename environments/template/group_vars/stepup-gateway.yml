# Config for gateway component

# Used for Symfony CSRF protection (Vaulted)
gateway_secret: "{{ lookup('file', inventory_dir+'/secret/gateway') }}"


# Messagebird (www.messagebird.com) REST API (v2 and above) access key (Vaulted)
# Required for sending SMS messages
# TODO: Set messagebird API access key
messagebird_authorization: "{{ lookup('file', inventory_dir+'/password/empty_placeholder') }}"


# Yubikey client_id (Plain) and secret (Vaulted) for accessing the yubico authentication service
# Create one at: https://upgrade.yubico.com/getapikey/
# TODO: Set yubikey client id
yubikey_client_id: "{{ lookup('file', inventory_dir+'/yubico_client_id') }}"
#yubikey_client_id: 00000

# TODO: Set yubikey secret
yubikey_client_secret: "{{ lookup('file', inventory_dir+'/password/yubico_secret_key') }}"


# Whether to enable the second factor only (SFO) authentication endpoint
# Metadata for this endpoint: /second-factor-only/metadata
# TODO: Disable the SFO endpoint when it will not be used
gateway_second_factor_only: true

# Format: PEM RSA PRIVATE KEY (Vaulted)
gateway_saml_sp_privatekey: "{{ lookup('file', inventory_dir+'/saml_cert/gateway_saml_sp.key') }}"
# Format: PEM X.509 certificate
gateway_saml_sp_publickey: "{{ lookup('file', inventory_dir+'/saml_cert/gateway_saml_sp.crt') }}"


# Public key is in all.yml, so RA and SS have access to it.
# Format: PEM RSA PRIVATE KEY
gateway_saml_idp_privatekey: "{{ lookup('file', inventory_dir+'/saml_cert/gateway_saml_idp.key') }}"


# Format: PEM RSA PRIVATE KEY (Vaulted)
gateway_tiqr_sp_privatekey: "{{ lookup('file', inventory_dir+'/saml_cert/gateway_tiqr_sp.key') }}"
# Used by the gateway to authenticate users to the real Tiqr IdP
# Format: PEM X.509 certificate
gateway_tiqr_sp_publickey: "{{ lookup('file', inventory_dir+'/saml_cert/gateway_tiqr_sp.crt') }}"


# Public key is in all, so RA and SS have access to it.
# Format: PEM RSA PRIVATE KEY (Vaulted)
gateway_tiqr_idp_privatekey: "{{ lookup('file', inventory_dir+'/saml_cert/gateway_tiqr_idp.key') }}"


# Configuration of the remote Tiqr IdP
# Entity ID of the Tiqr Idp
gateway_tiqr_remote_entity_id: 'https://{{ tiqr_vhost_name }}/saml/metadata'
# SingleSingOn Location of the remote Tiqr IdP
gateway_tiqr_remote_sso_url: 'https://{{ tiqr_vhost_name }}/saml/sso'
# SAML signing certificate of the Tiqr IdP
# Format: Base64 encoded X.509 certificate without PEM headers
gateway_tiqr_remote_certificate: "{{ tiqr_idp_publickey | depem }}"


# Configuration of the remote Biometric IdP
# Entity ID of the Biometric Idp
# TODO: Set remote Biometric IdP EntityID
gateway_biometric_remote_entity_id: 'https://biometric.example.com/saml/metadata'
# SingleSingOn Location of the remote Biometric IdP
# TODO: Set remote Biometric IdP SSL Location
gateway_biometric_remote_sso_url: 'https://biometric.example.com/saml/sso'
# SAML signing certificate of the Biometric IdP
# Format: Base64 encoded X.509 certificate without PEM headers
# TODO: Set remote Biometric IdP SAML Signing certificate
#gateway_biometric_remote_certificate: "{{ biometric_idp_publickey | depem }}"
gateway_biometric_remote_certificate: ""