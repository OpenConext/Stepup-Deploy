# Config for gateway component

# Used for Symfony CSRF protection (Vaulted)
gateway_secret: "{{ lookup('file', inventory_dir+'/secret/gateway') }}"


# Messagebird (www.messagebird.com) REST API (v2 and above) access key (Vaulted)
# Required for sending SMS messages
# You can register at https://www.messagebird.com/ for a free developer / trial account
# TODO: Set messagebird API access key
messagebird_authorization: "{{ lookup('file', inventory_dir+'/password/empty_placeholder') }}"


# Yubikey client_id (Plain) and secret (Vaulted) for accessing the yubico authentication service
# Get a client ID and secret for free at https://upgrade.yubico.com/getapikey/
# Requires a yubikey
# Note: Stepup requires a YubiKey to bootstrap SRAA users
# TODO: Set yubikey client id
yubikey_client_id: 00000
# TODO: Set yubikey secret
# You can use the encrypt.sh script to encrypt the secret. E.g.
# "Stepup-Deploy/scripts/encrypt.sh environment/stepup-ansible-keystore"
yubikey_client_secret: "{{ lookup('file', inventory_dir+'/password/empty_placeholder') }}"


# Whether to enable the second factor only (SFO) authentication endpoint
# This enpoint allows external SPs to authenticate *only* the second factor of a previously vetted user
# This enpont is not required for the Stepup service itself to function.
# Metadata for this endpoint: https://gateway_vhost_name/second-factor-only/metadata
# Allowed values: "true" or "false"
# TODO: Set to true to enable the SFO endpoint on the gateway
gateway_second_factor_only: false

# Format: PEM RSA PRIVATE KEY (Vaulted)
gateway_saml_sp_privatekey: "{{ lookup('file', inventory_dir+'/saml_cert/gateway_saml_sp.key') }}"
# Format: PEM X.509 certificate
gateway_saml_sp_publickey: "{{ lookup('file', inventory_dir+'/saml_cert/gateway_saml_sp.crt') }}"


# Public key is in all.yml, so RA and SS have access to it.
# Format: PEM RSA PRIVATE KEY
gateway_saml_idp_privatekey: "{{ lookup('file', inventory_dir+'/saml_cert/gateway_saml_idp.key') }}"


# Format: PEM RSA PRIVATE KEY (Vaulted)
gateway_gssp_sp_privatekey: "{{ lookup('file', inventory_dir+'/saml_cert/gateway_gssp_sp.key') }}"
# Used by the gateway to authenticate users to real GSSP IdPs
# Format: PEM X.509 certificate
gateway_gssp_sp_publickey: "{{ lookup('file', inventory_dir+'/saml_cert/gateway_gssp_sp.crt') }}"


# Public key is in all, so RA and SS have access to it.
# Format: PEM RSA PRIVATE KEY (Vaulted)
gateway_gssp_idp_privatekey: "{{ lookup('file', inventory_dir+'/saml_cert/gateway_gssp_idp.key') }}"


# Configuration of the remote Tiqr GSSP IdP
# Entity ID of the Tiqr Idp
gateway_tiqr_remote_entity_id: 'https://{{ tiqr_vhost_name }}/saml/metadata'
# SingleSingOn Location of the remote Tiqr IdP
gateway_tiqr_remote_sso_url: 'https://{{ tiqr_vhost_name }}/saml/sso'
# SAML signing certificate of the Tiqr IdP
# Format: Base64 encoded X.509 certificate without PEM headers
gateway_tiqr_remote_certificate: "{{ tiqr_idp_publickey | depem }}"


# Configuration for adding an additional GSSP IdP "example_gssp"
# You can get this information from the
# Entity ID of the remote "example_gssp" Idp
#gateway_example_gssp_remote_entity_id: 'https://example_gssp.example.com/saml/metadata'
# SingleSingOn Location of the remote "example_gssp" IdP
#gateway_example_gssp_remote_sso_url: 'https://example_gssp.example.com/saml/sso'
# SAML signing certificate of the "example_gssp" IdP
# Format: Base64 encoded X.509 certificate without PEM headers
#gateway_example_gssp_remote_certificate: ""
