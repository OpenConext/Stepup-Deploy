# Install the "REMI" repo which contain newer php packages that override the default
# that come with the distro (CentOS7: 5.4; CentOS6: 5.3)
- name: Install REMI repo
  yum: name=http://rpms.famillecollet.com/enterprise/remi-release-7.rpm state=present

- name: Enable REMI repo
  copy: src=remi.repo dest=/etc/yum.repos.d/remi.repo


- name: Create deploy user
  user: name={{app_deploy_user}} state=present

- name: Add authorized_keys for deploy user
  authorized_key:
    user: "{{ app_deploy_user }}"
    exclusive: Yes # All keys are managed through ansible
    key_options: 'no-port-forwarding,from="{{ app_deploy_user_ssh_from }}"'
    key: "{{ app_deploy_user_ssh_key }}"
  when:  app_deploy_user_ssh_key is defined


# node.less is used by app/console assetic:dump
# sendmail is used for sending mail from localhost (enabled in default config)
- name: Install nginx, php-(cli,fpm), node.less, smtpd, mysql client libs, bzip2
  yum:
    name:
      - mysql
      - bzip2
      - nginx
      - php-fpm
      - php-cli
      - php-mbstring
      - php-mcrypt
      - php-pdo
      - php-intl
      - php-dom
      - php-mysql
      - php-bcmath
      - php-gmp
      - php-pecl-memcache
      - nodejs
      - nodejs-less.noarch
      - sendmail
      - sendmail-cf
    state: present

# TODO: Why isn't php-gmp beining installed by the previous yum task?
- name: Fix for php-gmp not being installed
  yum: name=php-gmp state=present

# Look for sendmail smarthost
- name: Configure sendmail with smarthost
  template: src='sendmail.cf.j2' dest='/etc/mail/sendmail.cf'
  when: sendmail_smarthost is defined
  register: sendmail_smarthost_result
  notify:
    - reload sendmail

# TODO: Why is this here ???
# Build sendmail config file from template
#- name: Configure sendmail
#  command: make -C /etc/mail
#  when: (sendmail_smarthost is defined) and (sendmail_smarthost_result|changed)

# php-gd requires libgd (>2.1.1) from remi repo
- name: Install php-gd
  yum: name=php-gd state=present enablerepo=remi

- name: Put php.ini
  template: src='php.ini.j2' dest='/etc/php.ini'
  notify:
    - restart php-fpm

# Remove default distro conf files
- name: Remove known default distro files in /etc/nginxconf.d/ and /etc/php-fpm.d/
  file: path={{item}} state=absent
  with_items:
  - /etc/php-fpm.d/www.conf
  - /etc/nginx/conf.d/default.conf
  - /etc/nginx/conf.d/ssl.conf
  - /etc/nginx/conf.d/virtual.conf
  notify:
  #- restart httpd
  - restart nginx
  - restart php-fpm

- name: Put /etc/php-fpm.conf
  copy: src='php-fpm.conf' dest='/etc/php-fpm.conf'
  notify:
      - restart php-fpm


- name: Put nginx.conf
  template: src='nginx.conf.j2' dest='/etc/nginx/nginx.conf'
  notify:
      - restart nginx


# Set mode to a+x so components can access their subdirectories under session/
- name: Create directory for vhosts to store PHP sessions
  file: path=/var/lib/stepup/session/ state=directory mode="771" owner=root group=root

# Directory that contains the symlinks to active applications
- name: Create /opt/www/
  file: path=/opt/www/ state=directory owner=root group={{ app_deploy_user }} mode=775

# Directory for configuration scripts
- name: Create /opt/scripts/
  file: path=/opt/scripts/ state=directory owner=root group={{ app_deploy_user }} mode=770

# Create vhosts for stepup components
- include: vhost.yml
  vars: { component_name: middleware,  vhost_name: "{{ middleware_vhost_name }}" }
  when: "inventory_hostname in groups['stepup-middleware']"
- include: vhost.yml
  vars: { component_name: gateway,     vhost_name: "{{ gateway_vhost_name }}" }
  when: "inventory_hostname in groups['stepup-gateway']"
- include: vhost.yml
  vars: { component_name: selfservice, vhost_name: "{{ selfservice_vhost_name }}" }
  when: "inventory_hostname in groups['stepup-selfservice']"
- include: vhost.yml
  vars: { component_name: ra,          vhost_name: "{{ ra_vhost_name }}" }
  when: "inventory_hostname in groups['stepup-ra']"
- include: vhost.yml
  vars: { component_name: tiqr,        vhost_name: "{{ tiqr_vhost_name }}" }
  when: "inventory_hostname in groups['stepup-tiqr']"
- include: vhost.yml
  vars: { component_name: keyserver,   vhost_name: "{{ keyserver_vhost_name }}" }
  when: "inventory_hostname in groups['stepup-keyserver']"

# Add vhost for running simplesaml php for developement
- include: vhost.yml
  vars: { component_name: ssp,   vhost_name: "{{ ssp_vhost_name }}" }
  when: "inventory_hostname in groups['dev']"


# Because nginx will restart with an invalid config without service detecting this, so we test the config  first
- name: Test nginx config
  command: /sbin/nginx -t
  register: nginx_test
  changed_when: False
  failed_when: nginx_test.rc > 0


- name: Start and enable nginx & php-fpm & smtp services
  service: name={{item}} state=started enabled=true
  with_items:
  - nginx
  - php-fpm
  - sendmail


- name: Put rsyslog config for nginx
  copy: src=rsyslog_nginx.conf dest=/etc/rsyslog.d/nginx.conf
  notify: restart rsyslog


  # /var/log/stepup-authentication-*.log is written by rsyslog (common role)
  # messages are generated by gateway component
- name: Put daily cron jobs for compressing and cleaning stepup-authentication logs
  copy: src={{ item }} dest='/etc/cron.daily/{{ item }}' mode=700
  when: "inventory_hostname in groups['stepup-gateway']"
  with_items:
  - compress-stepup-authnlogs.cron
  - delete-old-stepup-authnlogs.cron

