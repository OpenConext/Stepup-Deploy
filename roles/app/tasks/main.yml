---

- name: Check if any components to be installed need PHP 7.2
  set_fact:
    # A | intersect(B): list of items that exist in both A and B

    # stepup-webauthn and stepup-azuremfa always require php 7.2, so install php 7.2 when these must be installed
    # When one of the other components requires php7.2 this is set in app_php72_components
    # app_php72_components defaults to False. Set to true when one or more components to be installed require php 7.2
    app_require_php72: True
  when: >
    ( ( ['stepup-webauthn', 'stepup-azuremfa', 'stepup-demo-gssp', 'stepup-demo-gssp-2'] | intersect(group_names) ) | length > 0 ) or
    ( ( app_php72_components | intersect(group_names) ) | length > 0 )


- name: Check if any components to be installed require PHP 5.6
  set_fact:
    # A | intersect(B): list of items that exist in both A and B
    # A | difference(B): list of items that exist in A but do not exist in B

    # Set app_require_php56 default to True. Set to false when all "old" components to be installed are listed in app_php72_components
    # so no components to be installed require php 5.6
    app_require_php56: False
  when: >
    ( ( ['stepup-middleware', 'stepup-gateway', 'stepup-selfservice', 'stepup-ra', 'stepup-tiqr', 'stepup-keyserver'] | intersect(group_names) )
        | difference(app_php72_components) ) | length == 0

- debug:
    msg: "app_require_php56: {{ app_require_php56 | bool }}; app_require_php72: {{ app_require_php72 }}; app_remove_php56: {{ app_remove_php56 }}"


# node.less is used by app/console assetic:dump
# sendmail is used for sending mail from localhost (enabled in default config)
- name: Install node.less, smtpd, mysql client libs
  yum:
    name:
      - mysql
      - bzip2
      - nginx

      - nodejs # CentOS 7 nodejs = 6.11.1
      - nodejs-less.noarch # nodejs less module required for assetic:dump by SS, RA and GW <= release 17

      - sendmail
      - sendmail-cf
      # PHP 5.6 from remi-php56 repo. These override the centos base php versions
      # Config is in the centos default locations (/etc/)


# Install the "REMI" repo which contain newer php packages that override the default
# that come with the distro (CentOS7: 5.4; CentOS6: 5.3)
- name: Install REMI repo
  yum: name=http://rpms.famillecollet.com/enterprise/remi-release-7.rpm state=present

- name: Enable REMI repo
  copy: src=remi.repo dest=/etc/yum.repos.d/remi.repo


## PHP 5.6 installation block
- name: Install PHP 5.6
  block:

  - name: Install PHP 5.6 rpm's
    yum:
      name:
        - php-fpm
        - php-cli
        - php-mbstring
        - php-mcrypt
        - php-pdo
        - php-intl
        - php-dom
        - php-mysql
        - php-bcmath
        - php-gmp
        - php-pecl-memcache

  # Fix for php-gmp not being installed even though it is listed above
  - name: Install php-gmp again
    yum:
      name:
        - php-gmp

  # php-gd requires libgd (>2.1.1) from remi repo
  - name: Install php-gd
    yum: name=php-gd state=present enablerepo=remi

  - name: Put php.ini for PHP 5.6 (/etc/php.ini)
    template: src='php.ini.j2' dest='/etc/php.ini'
    notify:
      - restart php-fpm

  # Place empty www.conf to prevent this file being created on php-fpm OS-updates
  - name: Add empty www.conf in /etc/php-fpm.d/
    copy: src='www.conf' dest='/etc/php-fpm.d/www.conf'
    notify:
      - restart php-fpm

  - name: Put /etc/php-fpm.conf
    copy: src='php-fpm.conf' dest='/etc/php-fpm.conf'
    notify:
      - restart php-fpm

  when: app_require_php56


## PHP 7.2 installation block
- name: Install PHP 7.2
  block:
    - name: Install PHP 7.2 rpm's
      yum:
        name:
          # PHP 7.2 from remi-safe repo. These are installed alongside existing (centos / remi-php56) versions
          # Config in /opt/remi/php72
          - php72-php-fpm
          - php72-php-cli
          - php72-php-mbstring
          - php72-php-mcrypt
          - php72-php-pdo
          - php72-php-intl
          - php72-php-dom
          - php72-php-mysql
          - php72-php-bcmath
          - php72-php-gmp
          - php72-php-pecl-memcache
          - php72-php-sodium
          - php72-php-gd
        state: present

    - name: Put php.ini for PHP 7.2 (/etc/opt/remi/php72/php.ini)
      template: src='php.ini.j2' dest='/etc/opt/remi/php72/php.ini'
      notify:
        - restart php72-php-fpm

    # Place empty www.conf to prevent this file being created on php-fpm OS-updates
    - name: Add empty www.conf in /etc/opt/remi/php72/php-fpm.d/www.conf
      copy: src='www.conf' dest='/etc/opt/remi/php72/php-fpm.d/www.conf'
      notify:
        - restart php72-php-fpm

    - name: Put /etc/opt/remi/php72/php-fpm.conf
      copy: src='php72-php-fpm.conf' dest='/etc/opt/remi/php72/php-fpm.conf'
      notify:
        - restart php72-php-fpm

    - name: Put 72 php-fpm systemd override file to create the socket dir
      copy:
        src: "createrundir.conf"
        dest: "/etc/systemd/system/php72-php-fpm.service.d/createrundir.conf"
      notify:
        - "restart php72-php-fpm"

  when: app_require_php72


# Look for sendmail smarthost
- name: Configure sendmail with smarthost
  template: src='sendmail.cf.j2' dest='/etc/mail/sendmail.cf'
  when: sendmail_smarthost is defined
  register: sendmail_smarthost_result
  notify:
    - reload sendmail


- name: Create deploy user
  user: name={{app_deploy_user}} state=present

- name: Add authorized_keys for deploy user
  authorized_key:
    user: "{{ app_deploy_user }}"
    exclusive: Yes # All keys are managed through ansible
    key_options: 'no-port-forwarding,from="{{ app_deploy_user_ssh_from }}"'
    key: "{{ app_deploy_user_ssh_key }}"
  when:  app_deploy_user_ssh_key is defined


# Remove default distro conf files
- name: Remove nginx known default distro files in /etc/nginxconf.d/
  file: path={{item}} state=absent
  with_items:
  - /etc/nginx/conf.d/default.conf
  - /etc/nginx/conf.d/ssl.conf
  - /etc/nginx/conf.d/virtual.conf
  notify:
  - restart nginx

- name: Put nginx.conf
  template: src='nginx.conf.j2' dest='/etc/nginx/nginx.conf'
  notify:
  - restart nginx

# This task can be removed once deployed on all nodes
- name: Remove obsolete Nginx rsyslog config
  file: path=/etc/rsyslog.d/nginx.conf state=absent
  notify: restart rsyslog

# Set mode to a+x so components can access their subdirectories under session/
- name: Create directory for vhosts to store PHP sessions
  file: path=/var/lib/stepup/session/ state=directory mode="771" owner=root group=root


# Directory that contains the symlinks to active applications
- name: Create /opt/www/
  file: path=/opt/www/ state=directory owner=root group={{ app_deploy_user }} mode=775


# Directory for configuration scripts
- name: Create /opt/scripts/
  file: path=/opt/scripts/ state=directory owner=root group={{ app_deploy_user }} mode=770


# Create vhosts for stepup components
- name: Configure middleware vhost
  include_tasks: vhost.yml
  vars:
    component_name: middleware
    vhost_name:      "{{ middleware_vhost_name }}"
    php_version:     "{{ ('stepup-middleware' in app_php72_components) | ternary( 72, 56) }}"
    symfony_version: "{{ ('stepup-middleware' in app_symfony_3_components or php_version == 56) | ternary( 3, 4) }}"
  when: "'stepup-middleware' in group_names"

- name: Configure gateway vhost
  include_tasks: vhost.yml
  vars:
    component_name: gateway
    vhost_name:      "{{ gateway_vhost_name }}"
    php_version:     "{{ ('stepup-gateway' in app_php72_components) | ternary( 72, 56) }}"
    symfony_version: "{{ ('stepup-gateway' in app_symfony_3_components or php_version == 56) | ternary( 3, 4) }}"
  when: "'stepup-gateway' in group_names"

- name: Configure selfservice vhost
  include_tasks: vhost.yml
  vars:
    component_name: selfservice
    vhost_name:      "{{ selfservice_vhost_name }}"
    php_version:     "{{ ('stepup-selfservice' in app_php72_components) | ternary( 72, 56) }}"
    symfony_version: "{{ ('stepup-selfservice' in app_symfony_3_components or php_version == 56) | ternary( 3, 4) }}"
  when: "'stepup-selfservice' in group_names"

- name: Configure ra vhost
  include_tasks: vhost.yml
  vars:
    component_name: ra
    vhost_name:      "{{ ra_vhost_name }}"
    php_version:     "{{ ('stepup-ra' in app_php72_components) | ternary( 72, 56) }}"
    symfony_version: "{{ ('stepup-ra' in app_symfony_3_components or php_version == 56) | ternary( 3, 4) }}"
  when: "'stepup-ra' in group_names"

- name: Configure tiqr vhost
  include_tasks: vhost.yml
  vars:
    component_name: tiqr
    vhost_name:      "{{ tiqr_vhost_name }}"
    php_version:     "{{ ('stepup-tiqr' in app_php72_components) | ternary( 72, 56) }}"
    symfony_version: "{{ ('stepup-tiqr' in app_symfony_3_components or php_version == 56) | ternary( 3, 4) }}"
  when: "'stepup-tiqr' in group_names"

- name: Configure keyserver vhost
  include_tasks: vhost.yml
  vars:
    component_name: keyserver
    vhost_name:      "{{ keyserver_vhost_name }}"
    php_version:     "{{ ('stepup-kerserver' in app_php72_components) | ternary( 72, 56) }}"
    symfony_version: "{{ ('stepup-keyserver' in app_symfony_3_components or php_version == 56) | ternary( 3, 4) }}"
  when: "'stepup-keyserver' in group_names"

- name: Configure webauthn vhost
  include_tasks: vhost.yml
  vars:
    component_name:  webauthn
    vhost_name:      "{{ webauthn_vhost_name }}"
    php_version:     72
    symfony_version: 4
  when: "'stepup-webauthn' in group_names"

- name: Configure azuremfa vhost
  include_tasks: vhost.yml
  vars:
    component_name: azuremfa
    vhost_name:     "{{ azuremfa_vhost_name }}"
    php_version:    72
    symfony_version: 4
  when: "'stepup-azuremfa' in group_names"

- name: Configure demo_gssp vhost (DEVELOP)
  include_tasks: vhost.yml
  vars:
    component_name: demo_gssp
    vhost_name:     "{{ demo_gssp_vhost_name }}"
    php_version:    72
    symfony_version: 4
  when: "'stepup-demo-gssp' in group_names"

- name: Configure demo_gssp_2 vhost (DEVELOP)
  include_tasks: vhost.yml
  vars:
    component_name:  demo_gssp_2
    vhost_name:      "{{ demo_gssp_2_vhost_name }}"
    php_version:     72
    symfony_version: 4
  when: "'stepup-demo-gssp-2' in group_names"

# Add vhost for running simplesaml php for developement only
- name: Configure ssp vhost (DEVELOP)
  include: vhost.yml
  vars:
    component_name:  ssp
    vhost_name:      "{{ ssp_vhost_name }}"
    php_version:     72
    symfony_version: 4
    nginx_vhost_template: "php72-nginx-vhost-ssp.conf.j2"
  when: "inventory_hostname in groups['dev'] | default([])"


# Because nginx will restart with an invalid config without service detecting this, so we test the config  first
- name: Test nginx config
  command: /sbin/nginx -t
  register: nginx_test
  changed_when: False
  failed_when: nginx_test.rc > 0


- name: Start and enable nginx & smtp services
  service: name={{item}} state=started enabled=true
  with_items:
  - nginx
  - sendmail


- name: Start and enable php-fpm if needed
  service: name={{item}} state=started enabled=true
  with_items:
    - php-fpm
  when: app_require_php56


- name: Start and enable php7-fpm if needed
  service: name={{item}} state=started enabled=true
  with_items:
  - php72-php-fpm
  when: app_require_php72

  # /var/log/stepup-authentication-*.log is written by rsyslog (common role)
  # messages are generated by gateway component
- name: Put daily cron jobs for compressing and cleaning stepup-authentication logs
  copy: src={{ item }} dest='/etc/cron.daily/{{ item }}' mode=700
  when: "inventory_hostname in groups['stepup-gateway']"
  with_items:
  - compress-stepup-authnlogs.cron
  - delete-old-stepup-authnlogs.cron


- name: Remove PHP 5.6
  block:

  - name: Flush ansible handlers
    meta: flush_handlers

  - name: Stop and disable php-fpm
    service: name={{item}} state=stopped enabled=false
    with_items:
      - php-fpm
    ignore_errors: yes

  - name: Remove PHP 5.6 yum packages
    yum:
      name:
        - php-fpm
        - php-cli
        - php-mbstring
        - php-mcrypt
        - php-pdo
        - php-intl
        - php-dom
        - php-mysql
        - php-bcmath
        - php-gmp
        - php-pecl-memcache
        - php-gd
      state: absent

  when: app_remove_php56 and not app_require_php56
