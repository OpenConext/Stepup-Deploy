server {
    listen       80;
    server_name  {{ vhost_name }};
{% if component_name == "ssp" %}
    root /opt/www/{{ vhost_name }}/www;
{% else %}
    root /opt/www/{{ vhost_name }}/web;
{% endif %}

    error_log /var/log/nginx/{{ component_name }}_error.log;
    access_log /var/log/nginx/{{ component_name }}_access.log combinedProxy;

    location /heartbeat {
        return 200 'Heartbeat for {{ vhost_name }}';
    }

# Get the IP address from the X-Forwarded-For header and store it in $remote_addr, but
# only if the connection (i.e. the current $remote_addr) is from
# one of the IPs specified in "set_real_ip_from" below.
{% if 'proxy' in group_names %}
    set_real_ip_from  127.0.0.1;
{% endif %}
{% for host in groups['lb'] %}
    set_real_ip_from  {{ hostvars[host]['host_ipv4'] }};
{% endfor %}
    real_ip_header    X-Forwarded-For;
    real_ip_recursive off;

{% if component_name == "ssp" %}

    location / {
        try_files $uri $uri/ =404;
        index index.php index.html;
    }

    location ~ \.php(/|$) {
        fastcgi_pass unix:/var/run/php-fpm/ssp.socket;

        fastcgi_split_path_info ^(.+?\.php)(/.+)$;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        include fastcgi_params;
    }
{% elif component_name == "tiqr" %}
    location /tiqr/ {
        # try to serve file directly, otherwise forward to tiqr/index.php
        try_files $uri /tiqr/index.php$is_args$args;
    }
    location /saml/ {
        # try to serve file directly, otherwise forward to saml/index.php
        try_files $uri /saml/index.php$is_args$args;
    }
    # Forward: /tiqr/tiqr.php, /tiqr/indexp.php and /saml/index.php
    location ~ ^/(tiqr|saml)/(tiqr|index)\.php(/|$) {
        fastcgi_pass unix:/var/run/php-fpm/{{ component_name }}.socket;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;

        # Include fastcgi_params from /etc/nginx/fastcgi_params, then
        # override some of them
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS on;
    }
{% else %}
    {% if 'dev' in group_names and component_name != "middleware" %}
    location / {
        # try to serve file directly, fallback to app_dev.php
        try_files $uri /app_dev.php$is_args$args;
    }

    location ~ ^/app_dev\.php(/|$) {
        fastcgi_pass unix:/var/run/php-fpm/{{ component_name }}.socket;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        # Include fastcgi_params from /etc/nginx/fastcgi_params, then
        # override some of them
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS on;
        fastcgi_param SYMFONY_ENV prod;
    }
    {% else %}
    location / {
        # try to serve file directly, fallback to app.php
        try_files $uri /app.php$is_args$args;
    }
    location ~ ^/app_dev\.php(/|$) {
        fastcgi_pass unix:/var/run/php-fpm/{{ component_name }}.socket;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        # Include fastcgi_params from /etc/nginx/fastcgi_params, then
        # override some of them
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS on;
        fastcgi_param SYMFONY_ENV prod;
    }
    {% endif %}
{% endif %}
}