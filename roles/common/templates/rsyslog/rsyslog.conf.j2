# Based on default Centos7 rsyslog.conf
# CentOS 7 ships with rsyslogd 7.4.7
# rsyslog configuration file

# For more information see /usr/share/doc/rsyslog-*/rsyslog_conf.html
# If you experience problems, see http://www.rsyslog.com/doc/troubleshoot.html

{# Increase max size of messages from default 2k, must be included before before any input is defined #}
$MaxMessageSize 32k

#### MODULES ####

# The imjournal module bellow is now used as a message source instead of imuxsock.
$ModLoad imuxsock # provides support for local system logging (e.g. via logger command)
$ModLoad imjournal # provides access to the systemd journal
#$ModLoad imklog # reads kernel messages (the same are read from journald)

$ModLoad immark  # provides --MARK-- message capability
$MarkMessagePeriod 600 # 10 minutes

# For following nginx logs
$ModLoad imfile # allow reading logs from file

# Provides UDP syslog reception
#$ModLoad imudp
#$UDPServerRun 514

# Provides TCP syslog reception
#$ModLoad imtcp
#$InputTCPServerRun 514

# Log stats. Stats are logged as rsyslogd-pstats
module(load="impstats"
       interval="600" # Every 10 minutes
       severity="6")  # Info

#### GLOBAL DIRECTIVES ####

# Where to place auxiliary files
# Directory where buffered queues are stored
$WorkDirectory /var/lib/rsyslog

# Use default timestamp format
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

# File syncing capability is disabled by default. This feature is usually not required,
# not useful and an extreme performance hit
#$ActionFileEnableSync on

# Include all config files in /etc/rsyslog.d/
$IncludeConfig /etc/rsyslog.d/*.conf

# Turn off message reception via local log socket;
# local messages are retrieved through imjournal now.
$OmitLocalLogging on

# File to store the position in the journal
$IMJournalStateFile imjournal.state


# stepup authentication messages are logged to file per day.
# Cleanup and compression is handled using cron jobs (not logrotate)
$template StepupAuthnFile,"/var/log/stepup-authentication-%$YEAR%-%$MONTH%-%$DAY%.log"

#### RULES ####

# Write stepup authentication messages to file
# This is executed on all hosts. This means that the on the central loghost the aggregate
# messages are written to file
$ActionName local-stepup-authentication
if $programname == 'stepup-authentication' then ?StepupAuthnFile

# Log messages locally

# Log all kernel messages to the console.
# Logging much else clutters up the screen.
#kern.*                                                 /dev/console

# Log anything (except mail) of level info or higher.
# Don't log private authentication messages!
$ActionName local-log-messages
*.info;mail.none;authpriv.none;cron.none                /var/log/messages

# The authpriv file has restricted access.
$ActionName local-log-secure
authpriv.*                                              /var/log/secure

# Log all the mail messages in one place.
$ActionName local-log-mail
mail.*                                                  -/var/log/maillog

# Log cron stuff
$ActionName local-log-cron
cron.*                                                  /var/log/cron

# Everybody gets emergency messages
$ActionName local-emerg
*.emerg                                                 :omusrmsg:*

# Save news errors of level crit and higher in a special file.
$ActionName local-log-spooler
uucp,news.crit                                          /var/log/spooler

# Save boot messages also to boot.log
$ActionName local-log-boot
local7.*                                                /var/log/boot.log

{% if rsyslog_remote_server is defined %}
# Forward all logs to the central logging server
module(load="omrelp")
action(type="omrelp" 
target="{{ rsyslog_remote_server }}" 
port="{{ rsyslog_remote_port }}" 
tls="on" 
tls.caCert="/etc/pki/rsyslog/rsyslogclientca.crt" 
tls.MyCert="/etc/pki/rsyslog/rsyslogclient.crt"
tls.MyPrivKey="/etc/pki/rsyslog/rsyslogclient.key"
tls.authmode="name" 
tls.permittedpeer=["{{ rsyslog_remote_server }}"])
queue.type="LinkedList" 
queue.filename="rsyslog_relp_q"
queue.maxdiskspace="1G"
queue.saveonshutdown="on" 
action.resumeRetryCount="-1"
action.resumeInterval="5")
$PreserveFQDN on
{% endif %}
