#!/bin/sh
#
#
#       mysqlping OCF RA that utilizes the mysqladmin
#
# Copyright (c) 2011 Viacheslav Biriukov, Andrew Beekhof
#                    All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# Further, this software is distributed without any warranty that it is
# free of the rightful claim of any third person regarding infringement
# or the like.  Any license provided herein, whether implied or
# otherwise, applies only to this software file.  Patent licenses, if
# any, provided herein do not apply to combinations of this program with
# other software, or any other product whatsoever.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.
#

#######################################################################
# Initialization:

: ${OCF_FUNCTIONS_DIR=${OCF_ROOT}/lib/heartbeat}
. ${OCF_FUNCTIONS_DIR}/ocf-shellfuncs

#######################################################################

meta_data() {
        cat <<END
<?xml version="1.0"?>
<!DOCTYPE resource-agent SYSTEM "ra-api-1.dtd">
<resource-agent name="mysqlping">
<version>1.0</version>

<longdesc lang="en">
Every time the monitor action is run, this resource agent records (in the CIB) the current number of ping Mysql nodes the host can connect to.
It is essentially the same as ping except that it use Mysql the system ping tool to obtain the results.
</longdesc>
<shortdesc lang="en">node connectivity</shortdesc>

<parameters>

<parameter name="pidfile" unique="1">
<longdesc lang="en">PID file</longdesc>
<shortdesc lang="en">PID file</shortdesc>
<content type="string" default="$HA_VARRUN/mysqlping-${OCF_RESOURCE_INSTANCE}" />
</parameter>

<parameter name="dampen" unique="0">
<longdesc lang="en">
The time to wait (dampening) further changes occur
</longdesc>
<shortdesc lang="en">Dampening interval</shortdesc>
<content type="integer" default="5s"/>
</parameter>

<parameter name="name" unique="1">
<longdesc lang="en">
The name of the attributes to set.  This is the name to be used in the constraints.
</longdesc>
<shortdesc lang="en">Attribute name</shortdesc>
<content type="string" default="${OCF_RESOURCE_INSTANCE}"/>
</parameter>

<parameter name="multiplier" unique="0">
<longdesc lang="en">
The number by which to multiply the number of connected ping nodes by
</longdesc>
<shortdesc lang="en">Value multiplier</shortdesc>
<content type="integer" default="1"/>
</parameter>

<parameter name="host_list" unique="0">
<longdesc lang="en">
The list of Mysql nodes to ping. Haven't yet implemented. Pings only localhost.
</longdesc>
<shortdesc lang="en">Mysql host list</shortdesc>
<content type="string" default="localhost"/>
</parameter>

<parameter name="user" unique="0">
<longdesc lang="en">
User for  Mysql ping.
</longdesc>
<shortdesc lang="en">Mysql user</shortdesc>
<content type="string" default="root"/>
</parameter>

<parameter name="password" unique="0">
<longdesc lang="en">
Password for user
</longdesc>
<shortdesc lang="en">Mysql password</shortdesc>
<content type="string" default=""/>
</parameter>

<parameter name="timeout" unique="0">
<longdesc lang="en">
How long, in seconds, to wait before declaring a ping lost
</longdesc>
<shortdesc lang="en">ping timeout in seconds</shortdesc>
<content type="integer" default="15"/>
</parameter>

<parameter name="options" unique="0">
<longdesc lang="en">
A catch all for any other options that need to be passed to Mysql ping.
</longdesc>
<shortdesc lang="en">Extra Options</shortdesc>
<content type="string" default=""/>
</parameter>

<parameter name="debug" unique="0">
<longdesc lang="en">
Enables to use default attrd_updater verbose logging on every call.
</longdesc>
<shortdesc lang="en">Verbose logging</shortdesc>
<content type="string" default="false"/>
</parameter>

</parameters>

<actions>
<action name="start"   timeout="60" />
<action name="stop"    timeout="20" />
<action name="reload"  timeout="100" />
<action name="monitor" depth="0"  timeout="60" interval="10"/>
<action name="meta-data"  timeout="5" />
<action name="validate-all"  timeout="30" />
</actions>
</resource-agent>
END
}

#######################################################################

mysqlping_conditional_log() {
    level=$1; shift
    if [ ${OCF_RESKEY_debug} = "true" ]; then
        ocf_log $level "$*"
    fi
}

mysqlping_usage() {
        cat <<END
usage: $0 {start|stop|monitor|migrate_to|migrate_from|validate-all|meta-data}

Expects to have a fully populated OCF RA-compliant environment set.
END
}

mysqlping_start() {
    mysqlping_monitor && return $OCF_SUCCESS
    touch ${OCF_RESKEY_pidfile}
    mysqlping_update
}

mysqlping_stop() {

    rm -f ${OCF_RESKEY_pidfile}

    attrd_updater -D -n $OCF_RESKEY_name -d $OCF_RESKEY_dampen $attrd_options

    return $OCF_SUCCESS
}

mysqlping_monitor() {
    if [ -f ${OCF_RESKEY_pidfile} ]; then
        mysqlping_update

        return $OCF_SUCCESS
    fi
    return $OCF_NOT_RUNNING
}

mysqlping_validate() {

    # Is the state directory writable?
    state_dir=`dirname "$OCF_RESKEY_pidfile"`
    touch "$state_dir/$$"
    if [ $? != 0 ]; then
        ocf_log err "Invalid location for 'state': $state_dir is not writable"
        return $OCF_ERR_ARGS
    fi
    rm "$state_dir/$$"

# Pidfile better be an absolute path
    case $OCF_RESKEY_pidfile in
        /*) ;;
        *) ocf_log warn "You should use an absolute path for pidfile not: $OCF_RESKEY_pidfile" ;;
    esac

# Check the mysqlping interval
    if ocf_is_decimal "$OCF_RESKEY_CRM_meta_interval" && [ $OCF_RESKEY_CRM_meta_interval -gt 0 ]; then
        :
    else
        ocf_log err "Invalid mysqlping interval $OCF_RESKEY_interval. It should be positive integer!"
        exit $OCF_ERR_CONFIGURED
    fi

# Check the host list
    if [ "x" = "x$OCF_RESKEY_host_list" ]; then
        ocf_log err "Empty host_list.  Please specify some nodes to mysqlping"
        exit $OCF_ERR_CONFIGURED
    fi

    #check_binary ping
    check_binary mysqladmin

    return $OCF_SUCCESS
}

mysqlping_update() {
    active=0
    for host in $OCF_RESKEY_host_list; do
        #p_exe="/usr/bin/mysqladmin ping"
        p_exe="/usr/bin/sudo /opt/beheer/db-cluster-status.sh"

        case `uname` in
            Linux) p_args=" -h ${host} --user=$OCF_RESKEY_user  --password=$OCF_RESKEY_password --connect_timeout=$OCF_RESKEY_timeout";;
            *) ocf_log err "Unknown host type: `uname`"; exit $OCF_ERR_INSTALLED;;
        esac

        p_out=`$p_exe $p_args $OCF_RESKEY_options 2>&1 | grep 'Ready for writes'`; rc=$?

        case $rc in
            0) active=`expr $active + 1`;;
            1) mysqlping_conditional_log warn "Mysql on the $host is inactive: $p_out";;
            *) ocf_log err "Unexpected result for Mysql on the '$p_exe $p_args $OCF_RESKEY_options $host' $rc: $p_out";;
        esac
    done
    score=`expr $active \* $OCF_RESKEY_multiplier `


    attrd_updater -n $OCF_RESKEY_name -v $score -d $OCF_RESKEY_dampen $attrd_options

    rc=$?
    case $rc in
        0) mysqlping_conditional_log debug "Updated $OCF_RESKEY_name = $score" ;;
        *) ocf_log warn "Could not update $OCF_RESKEY_name = $score: rc=$rc";;
    esac

    return $rc
}

: ${OCF_RESKEY_name:="mysqlping"}
: ${OCF_RESKEY_dampen:="5s"}
: ${OCF_RESKEY_attempts:="5"}
: ${OCF_RESKEY_multiplier:="1"}
: ${OCF_RESKEY_debug:="false"}
: ${OCF_RESKEY_CRM_meta_timeout:="60"}
: ${OCF_RESKEY_CRM_meta_interval="10"}
: ${OCF_RESKEY_CRM_meta_globally_unique:="true"}

if [ -z ${OCF_RESKEY_timeout} ]; then
    host_count=`echo $OCF_RESKEY_host_list | awk '{print NF}'`
    OCF_RESKEY_timeout=`expr $OCF_RESKEY_CRM_meta_timeout / $host_count / $OCF_RESKEY_attempts`
    OCF_RESKEY_timeout=`expr $OCF_RESKEY_timeout / 1100` # Convert to seconds and finish 10% early
fi


if [ ${OCF_RESKEY_timeout} -lt 1 ]; then
    OCF_RESKEY_timeout=5
elif [ ${OCF_RESKEY_timeout} -gt 1000 ]; then
    # ping actually complains if this value is too high, 5 minutes is plenty
    OCF_RESKEY_timeout=300
fi

if [ ${OCF_RESKEY_CRM_meta_globally_unique} = "false" ]; then
    : ${OCF_RESKEY_pidfile:="$HA_VARRUN/mysqlping-${OCF_RESKEY_name}"}
else
    : ${OCF_RESKEY_pidfile:="$HA_VARRUN/mysqlping-${OCF_RESOURCE_INSTANCE}"}
fi

attrd_options='-q'
if ocf_is_true ${OCF_RESKEY_debug} ; then
    attrd_options=''
fi


case $__OCF_ACTION in
meta-data)      meta_data
                exit $OCF_SUCCESS
                ;;
start)          mysqlping_start;;
stop)           mysqlping_stop;;
monitor)        mysqlping_monitor;;
reload)         mysqlping_start;;
validate-all)   mysqlping_validate;;
usage|help)     mysqlping_usage
                exit $OCF_SUCCESS
                ;;
*)              mysqlping_usage
                exit $OCF_ERR_UNIMPLEMENTED
                ;;
esac
exit $?
