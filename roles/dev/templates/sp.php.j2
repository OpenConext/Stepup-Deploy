<?php

// A SAML SP in one PHP file
// Note that all options can be specified directly as get parameters to this script
// Could be useful for automated testing and such

$signing='rsa-sha256';
$key='default';

// These globals are used to modify the definition of this SP in authsources.php

// Default options
$GLOBALS['gSP_redirect_sign']=TRUE;
$GLOBALS['gSP_signature_algorithm']='http://www.w3.org/2001/04/xmldsig-more#rsa-sha256';
$GLOBALS['gSP_secondary_key']=FALSE;
$GLOBALS['gSP_ProtocolBinding']='urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST';

if ( isset($_REQUEST['signing'] ) ) {
    switch ($_REQUEST['signing']) {
        case 'none':
            $GLOBALS['gSP_redirect_sign']=FALSE;
            $GLOBALS['gSP_signature_algorithm']='';
            break;
        case 'rsa-sha256':
            break;
        case 'rsa-sha1':
            $GLOBALS['gSP_signature_algorithm']='http://www.w3.org/2000/09/xmldsig#rsa-sha1';
            break;
        case 'rsa-sha384':
            $GLOBALS['gSP_signature_algorithm']='http://www.w3.org/2001/04/xmldsig-more#rsa-sha384';
            break;
        case 'rsa-sha512':
            $GLOBALS['gSP_signature_algorithm']='http://www.w3.org/2001/04/xmldsig-more#rsa-sha512';
            break;
        default:
            $_REQUEST['signing']='rsa-sha256';
            break;
    }
    $signing=$_REQUEST['signing'];
}

if ( isset($_REQUEST['key']) && $_REQUEST['key']=='secondary' ) {
    $GLOBALS['gSP_secondary_key']=TRUE;
    $key='secondary';
}

if ( isset($_REQUEST['ProtocolBinding'])) {
    $GLOBALS['gSP_ProtocolBinding'] = $_REQUEST['gSP_ProtocolBinding'];
}
$protocolBinding=$GLOBALS['gSP_ProtocolBinding'];

$sp = 'default-sp';
if ( isset($_REQUEST['sp'] ) ) {
    $sp=$_REQUEST['sp'];
}

require_once('/usr/local/share/simplesamlphp/lib/_autoload.php');


function XMLTextNode2HTML_TS($domnode)
{
    if (!is_null($domnode) && isset($domnode[0])) {
        $time = SimpleSAML_Utilities::parseSAML2Time($domnode[0]->textContent);
        $offset = $time - time();
        $str = '<b>'.gmdate('r', $time).'</b>';
        $str .= ' (now '. (($offset>0) ? '+':'') . round(($offset/60)) . ' minutes)';
        return $str;
    }

    return '<i>N/A</i>';
}

function XMLTextNode2HTML($domnode)
{
    if (!is_null($domnode) && isset($domnode[0])) {
        return '<b>'.htmlentities($domnode[0]->textContent).'</b>';
    }

    return '<i>N/A</i>';
}

function HTML_select($label, $id, $options, $value="")
{
    $label=htmlentities($label);
    $id=htmlentities($id);
    $value=htmlentities($value);
    echo "<p>{$label}<select name=\"{$id}\">";
    foreach ($options as $name => $display) {
        $name=htmlentities($name);
        $display=htmlentities($display);
        echo "<option value=\"{$name}\"";
        if ($name==$value) {
            echo " selected";
        }
        echo ">{$display}</option>";
    }
    echo "</select></p>";
}

$gIDPmap = array(
    'https://{{ gateway_vhost_name }}/authentication/metadata' => array(
        'name' => 'OpenConext Stepup Gateway - {{ gateway_vhost_name }}',
        'loa' => array(
            1 => '{{ stepup_uri_loa1 }}',
            2 => '{{ stepup_uri_loa2 }}',
            3 => '{{ stepup_uri_loa3 }}',
        ),
    ),
    'https://{{ gateway_vhost_name }}/second-factor-only/metadata' => array(
        'name' => 'OpenConext Stepup Gateway - {{ gateway_vhost_name }} - SFO',
        'loa' => array(
            1 => 'http://no.level.1.for.sfo.example.com/assurance/sfo-level1', // Note does not exist
            2 => '{{ stepup_uri_sfo_loa2 }}',
            3 => '{{ stepup_uri_sfo_loa3 }}',
        ),
    ),
    'https://{{ ssp_vhost_name }}/simplesamlphp/saml2/idp/metadata.php' => array(
        'name' => 'Local SSP IdP - {{ ssp_vhost_name }}',
        'loa' => array(
            1 => '',
            2 => '',
            3 => '',
        ),
    ),
);



// MAIN


$as = new SimpleSAML_Auth_Simple($sp);

$session = SimpleSAML_Session::getSessionFromRequest();

$bIsAuthenticated = $as->isAuthenticated();

// Build return URL. This is where ask simplesamlPHP to direct the browser to after login or logout
// Point to this script, but without any request parameters so we won't trigger an login again (and again, and again, and ...)
$returnURL = ($_SERVER['HTTPS'] == 'on') ? 'https://' : 'http://';
$returnURL .= $_SERVER['HTTP_HOST'];
$returnURL .= $_SERVER['SCRIPT_NAME'];

// Process login and logout actions. Neither login nor logout return
if (isset($_REQUEST['action']) && $_REQUEST['action'] == 'login' ) {

    // Unset existing RequiredAuthnContextClassRef first
    $session->deleteData('string', 'RequiredAuthnContextClassRef');
    $bForceAuthn = false;
    if ( (isset($_REQUEST['forceauthn'])) && ($_REQUEST['forceauthn'] == 'true') )
        $bForceAuthn = true;

    $context = array(
        'ReturnTo' => $returnURL,
        'ForceAuthn' => $bForceAuthn,
        'saml:NameIDPolicy' => null,
    );

    // IdP
    if ( (isset($_REQUEST['idp'])) ) {
        $context['saml:idp'] = $_REQUEST['idp'];
    }

    // LOA
    if ( isset($_REQUEST['loa']) && isset($_REQUEST['idp']) && isset($gIDPmap[$_REQUEST['idp']]['loa'][$_REQUEST['loa']]) ) {
        $loa = $gIDPmap[$_REQUEST['idp']]['loa'][$_REQUEST['loa']];
        // Store the requested LOA in the session so we can verify it later
        $session->setData('string', 'RequiredAuthnContextClassRef', $loa);
        $context['saml:AuthnContextClassRef'] = $loa;  // Specify LOA
    }

    // Scoping IdPList
    if ( isset($_REQUEST['scopingIDP']) && strlen($_REQUEST['scopingIDP']) > 0 ) {
        $context['saml:IDPList'] = array($_REQUEST['scopingIDP']);
    }

    // RequesterID
    if ( isset($_REQUEST['requesterid']) && strlen($_REQUEST['requesterid']) > 0 ) {
        $context['saml:RequesterID'] = array($_REQUEST['requesterid']);
    }

    // NameIDPolicy
    if ( isset($_REQUEST['nameidpolicy']) && strlen($_REQUEST['nameidpolicy']) > 0 ) {
        $context['saml:NameIDPolicy'] = $_REQUEST['nameidpolicy'];
    }

    // Subject NameID
    if ( isset($_REQUEST['subject']) && strlen($_REQUEST['subject']) > 0 ) {
        $context['saml:NameID'] = array(
            'Value' => $_REQUEST['subject'],
            'Format' => SAML2_Const::NAMEID_UNSPECIFIED,
        );
    }


    // login
    $as->login( $context );

    exit;   // Added for clarity
}

if( isset($_REQUEST['action']) && $_REQUEST['action'] == 'logout' ) {
    $as->logout( array (
        'ReturnTo' => $returnURL,
    ) );  // Process logout
    exit;   // Added for clarity
}

// Display page

$idp=htmlentities(isset($_REQUEST['idp']) ? $_REQUEST['idp'] : "");
$loa=htmlentities(isset($_REQUEST['loa']) ? $_REQUEST['loa'] : "");
$nameidpolicy=htmlentities(isset($_REQUEST['nameidpolicy']) ? $_REQUEST['nameidpolicy'] : "");
$requesterid=htmlentities(isset($_REQUEST['requesterid']) ? $_REQUEST['requesterid'] : "");
$scopingIDP=htmlentities(isset($_REQUEST['scopingIDP']) ? $_REQUEST['scopingIDP'] : "");
$sp=htmlentities(isset($_REQUEST['sp']) ? $_REQUEST['sp'] : "default-sp");
$subject=htmlentities(isset($_REQUEST['subject']) ? $_REQUEST['subject'] : "");

echo <<<head
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
	<head>
		<meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
		<style type="text/css">
		    table,th,td {border: 1px solid black;}
		    th,td {padding 1px}
        </style>
		<title>simpleSAMLphp Demo SP</title>
	</head>
	<body>
		<h1>simpleSAMLphp Demo SP</h1>
head;

$authnInstant = '';
$expire = '';
if ( $bIsAuthenticated ) {
    $attributes = $as->getAttributes();

    /** @var $session SimpleSAML_Session */
    $requestedLOA = htmlentities($session->getData('string', 'RequiredAuthnContextClassRef'));
    $IdPEntityID = htmlentities($as->getAuthData('saml:sp:IdP'));
    $sessionIndex = htmlentities($as->getAuthData('saml:sp:SessionIndex'));
    $authState = $session->getAuthState($sp);
    //echo "<pre>"; print_r($authState); echo "</pre>";
    $authenticationAuthority=$authState['saml:AuthenticatingAuthority'];    // Array of AuthenticatingAuthority's
    $actualLOA = htmlentities($authState['saml:sp:AuthnContext']);
    $nameID = $as->getAuthData('saml:sp:NameID');
    $authnInstant = htmlentities(gmdate('r', $authState['AuthnInstant'] ));
    $expire = htmlentities(gmdate('r', $authState['Expire'] ));

    echo <<<html
        <h2>You are logged in</h2>
        <p>
        IdP EnitytID: <b>{$IdPEntityID}</b></br />
        </p>
html;

    echo "<h3>Session</h3>";
    echo "<p>";

    if (strlen($sessionIndex) > 0)
        echo "SessionIndex: <b>{$sessionIndex}</b></br />";
    echo "SimpleSAMLphp session start: <b>{$authnInstant}</b></br />";
    echo "SimpleSAMLphp session expire: <b>{$expire}</b></p>";

    echo "<h3>LOA</h3>";
    echo "<p>Actual LOA is: <b>{$actualLOA}</b></br />";
    if (strlen($requestedLOA) > 0) {
        echo "Requested LOA was: <b>{$requestedLOA}</b>";
    }
    echo "</p>";

    echo <<<html
    <h3>NameID</h3>
    <table>
html;
    foreach ($nameID as $key => $value) {
        $k = htmlentities($key);
        $v = htmlentities($value);
        echo "<tr><th>{$k}</th><td>{$v}</td></tr>";
    }
    echo <<<html
    </table>
html;


    echo <<<html
        <h3>Attributes</h3>
        <table>
        	<tr><th>Attribute</th><th>Value(s)</th></tr>
html;

    foreach ($attributes as $attrName => $attrVal) {
        echo "<tr><td>".htmlentities($attrName)."</td><td>";
        if (is_array($attrVal)) {
            for ($i=0;$i<sizeof($attrVal);$i++) {
                if ($attrVal[$i] instanceof DOMNodeList) {
                    foreach ($attrVal[$i] as $node) {
                        print_r(SAML2_Utils::parseNameId($node));
                    }
                }
                else {
                    echo htmlentities($attrVal[$i]);
                }
                if ($i+1<sizeof($attrVal)) {
                    echo "<br />";
                }
            }
        }
        else
            echo htmlentities($attrVal);
        echo "</td>";
    }
    echo <<<html
        </table>
        <h3>Logout</h3>
        <p>
            <form name="logout" action="sp.php" method="get">
               <input type="hidden" name="action" value="logout"/>
               <input type="submit" value="Logout" />
            </form>
        </p>
html;
} else {
    echo <<<html
        <h2>Your are not logged in</h2>
html;
}

echo <<<html
        <h3>Login (again)</h3>
        <p>
            <form name="login" action="sp.php" method="get">
               <input type="hidden" name="action" value="login"/>
html;

$idpOptions=array();
foreach ($gIDPmap as $i => $v) {
    $idpOptions[$i] = $v['name'];
}
HTML_select('Identity Provider: ', 'idp', $idpOptions, $idp);

HTML_select('Request LOA: ', 'loa',
    array(
        "" => "None",
        "1" => "1",
        "2" => "2",
        "3" => "3",
    ),
    $loa);

echo <<<html
               <p>
                    <input type="submit" value="Login" />
               </p>
               <hr />
               <h3>Advanced options</h3>
html;
                HTML_select("Service Provider EnityID: ", "sp",
                    array('default-sp'=>'default-sp', 'second-sp'=>'second-sp'),
                    $sp
                );
                HTML_select("Signing: ", "signing",
                    array(
                        'none'=>'none',
                        'rsa-sha1'=>'rsa-sha1',
                        'rsa-sha256'=>'rsa-sha256',
                        'rsa-sha384'=>'rsa-sha384',
                        'rsa-sha512'=>'rsa-sha512',
                    ),
                    $signing
                );

                HTML_select("Signing key: ", "key",
                    array(
                        'default'=>'default',
                        'secondary'=>'secondary',
                    ),
                    $key
                );

                HTML_select("NameIDPolicy: ", "nameidpolicy",
                    array(
                        '' => 'None',
                        'urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified' => 'unspecified',
                        'urn:oasis:names:tc:SAML:2.0:nameid-format:persistent' => 'persistent',
                        'urn:oasis:names:tc:SAML:2.0:nameid-format:transient' => 'transient',
                    ),
                    $nameidpolicy
                );

/*
                HTML_select("ProtocolBinding: ", "ProtocolBinding",
                    array(
                        'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST' => 'HTTP-POST',
                        'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact' => 'HTTP-Artifact',
                        'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect' => 'HTTP-Redirect',
                        'urn:oasis:names:tc:SAML:2.0:profiles:holder-of-key:SSO:browser' => 'holder-of-key:SSO:browser',
                    ),
                    $protocolBinding
                );
*/
echo <<<html
               <p>Scoping (RequesterID):
                    <input type="text" name="requesterid" list="commonSPs" value="{$requesterid}" size="80">
                    <datalist id="commonSPs">
                        <option value="http://localhost/simplesaml/module.php/saml/sp/metadata.php/pieter-local-test-sp">
                    </datalist>
               </p>
               <p>Scoping (IDPList):
                    <input type="text" name="scopingIDP" list="commonIDPs" value="{$scopingIDP}" size="80">
                    <datalist id="commonIDPs">
                        <option value="https://pieter.aai.surfnet.nl/simplesamlphp/saml2/idp/metadata.php" />
                        <option value="https://idp.surfnet.nl" />
                    </datalist>
               </p>
               <p>
                   Subject: <input type="text" name="subject" list="commonSubjects" value="{$subject}" size="80"/
                   <datalist id="commonSubjects">
                        <option value="urn:collab:person:surfnet.nl:pieter" />
                   </datalist>
               </p>
               <p>
                    <input type="checkbox" name="forceauthn" value="true" />Force authentication<br />
               </p>

            </form>
        </p>
html;


echo <<<html
    </body>
</html>
html;
