#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    nbproc      1
    ulimit-n    9000
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option                  http-server-close
    option                  forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

{% for component in loadbalancing %}
#---------------------------------------------------------------------
# {{ component.name }} frontend
#---------------------------------------------------------------------
frontend {{ component.name }} 127.0.0.1:{{ component.port }}

    capture cookie JSESSIONID len 52

    acl url_all         path_beg        -i /
    use_backend         {{ component.name }}_be       if url_all
    default_backend     {{ component.name }}_be

{% endfor %}

{% for component in loadbalancing %}
#---------------------------------------------------------------------
# {{ component.name }} backend
#---------------------------------------------------------------------
backend {{ component.name }}_be

    # Healthcheck ombouwen naar controle op valide antwoord
    option httpchk {{ component.method }} {{ component.url }} HTTP/1.0
    option forwardfor # This sets X-Forwarded-For

    mode http
    balance roundrobin
    cookie JSESSIONID preserve indirect
    option httpclose

    cookie HTTPSERVERID insert nocache indirect

    {% for server in groups[{{ component.hostgroup }}] %}
    server {{ server.split('.')[0] }} {{ hostvars[server].host_ipv4 }}:{{ component.port }} cookie {{ server.split('.')[0] }} check inter 20000 fall 2 rise 2 maxconn 1024
    {% endfor %}

{% endfor %}
