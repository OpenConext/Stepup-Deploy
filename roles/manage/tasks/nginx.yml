---

- name: Install nginx
  yum:
    name:
    - nginx
    - python-passlib     # For Ansible htpasswd module
    state: present


# Remove default distro conf files
- name: Remove conf.d/welcome.conf
  file: path={{item}} state=absent
  with_items:
  - /etc/nginx/conf.d/default.conf
  - /etc/nginx/conf.d/ssl.conf
  - /etc/nginx/conf.d/virtual.conf
  notify:
  - restart nginx


# Put simple website
- name: Create dir /opt/www/{{ manage_vhost_name }}
  file: dest=/opt/www/{{ manage_vhost_name }} state=directory

- name: Put website in /opt/www/{{ manage_vhost_name }}
  template: src='www/{{ item }}.j2' dest='/opt/www/{{ manage_vhost_name }}/{{ item }}'
  with_items:
  - index.html


- name: Put manage nginx.conf
  template: src='nginx/nginx.conf.j2' dest='/etc/nginx/nginx.conf'
  notify:
      - restart nginx

- name: Put manage.conf
  template: src='nginx/manage.conf.j2' dest='/etc/nginx/conf.d/manage.conf'
  notify:
      - restart nginx


- name: Put manage cert
  copy: content="{{ manage_certificate }}" dest=/etc/nginx/manage.crt
  notify:
      - restart nginx

- name: Put manage key
  copy: content="{{ manage_key | vault(vault_keydir) }}" dest=/etc/nginx/manage.key owner=root mode=400
  notify:
      - restart nginx

- name: Write /etc/nginx/manage.htpasswd
  htpasswd: crypt_scheme=ldap_sha1 path=/etc/nginx/manage.htpasswd name={{ item.user }} password={{ item.password | vault(vault_keydir) }}
  with_items: "{{ manage_kibana_users }}"
  notify:
      - restart nginx


- name: Start and enable nginx
  service: name=nginx state=started enabled=yes
