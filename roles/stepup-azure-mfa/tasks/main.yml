---
# Install AzureMFA component

# TODO: Use config/lagacy directory for config and parameters
- name: Put parameters.yaml
  template: src={{ item }}.j2 dest={{ component_dir_name }}/config/packages/{{ item }} mode={{ component_mode_640 }} group={{ component_group }}
  with_items:
  - parameters.yaml

- name: Put .env file
  template: src=env.j2 dest={{ component_dir_name }}/.env.local group={{ component_group }} mode={{ component_mode_640 }}

- name: Put institutions.yaml from environment
  template: src={{ inventory_dir }}/files/stepup-azuremfa/institutions.yaml.j2 dest={{ component_dir_name }}/config/packages/institutions.yaml mode={{ component_mode_640 }} group={{ component_group }}


# Deploy does change file system rights, so run deploy first, then write files
- name: Deploy Symfony component
  include_role:
    name: deploy
    tasks_from: deploy

- name: Put images from <env>/files/stepup-app into web/images
  copy: src={{ item }} dest={{ component_dir_name }}/public/images mode=444 group={{ component_group }}
  with_fileglob:
  - "{{inventory_dir }}/files/stepup-app/images/*"

- name: Write Azure-MFA GSSP SP certificate
  copy: content="{{ gateway_gssp_sp_publickey }}" dest={{ component_config_file_dir_name }}/gateway.crt group={{ component_group }} mode={{ component_mode_644 }}

- name: Write Azure-MFA GSSP IdP certificate
  copy: content="{{ azuremfa_idp_publickey }}" dest={{ component_config_file_dir_name }}/cert.pem group={{ component_group }} mode={{ component_mode_644 }}

- name: Write Azure-MFA GSSP IdP private key
  copy: content="{{ azuremfa_idp_privatekey | vault(vault_keydir) }}" dest={{ component_config_file_dir_name }}/key.pem owner={{ component_owner }} mode={{ component_mode_400 }}


# include ../../deploy/activate.yml
- name: Activate Symfony component
  include_role:
    name: deploy
    tasks_from: activate
