# Install gateway component


- name: Put parameters.yml and samlstepupproviders(_parameters).yml
  template: src={{ item }}.j2 dest={{ component_dir_name }}/app/config/{{ item }} mode={{ component_mode_640 }} group={{ component_name }}
  with_items:
  - parameters.yml
  - samlstepupproviders.yml
  - samlstepupproviders_parameters.yml


- name: assets:install
  command: php app/console assets:install --symlink --env=prod {{ debug_flag }}
  args:
      chdir: "{{ component_dir_name }}"

- name: mopa:bootstrap:symlink:less
  command: php app/console mopa:bootstrap:symlink:less --env=prod {{ debug_flag }}
  args:
      chdir: "{{ component_dir_name }}"

- name: Dump Assetic Assets
  shell: php {{ component_dir_name }}/app/console assetic:dump --env=prod {{ debug_flag }}

- name: Clear and warmup cache
  shell: php {{ component_dir_name }}/app/console cache:clear --env=prod
  when: not (develop | default(false))


- name: Restrict app dir to the application
  file: path={{item}} group={{ component_group }} mode="o=" recurse=yes
  with_items:
  - "{{ component_dir_name }}/app"
  when: not (develop | default(false))

- name: Grant app write access to cache and log dirs
  file: path={{item}} group={{ component_group }} mode={{ component_mode_770 }} recurse=yes
  with_items:
  - "{{ component_dir_name }}/app/cache"
  - "{{ component_dir_name }}/app/logs"
  when: not (develop | default(false))

- name: Write SP private key
  copy: content="{{ gateway_saml_sp_privatekey | vault(vault_keydir) }}" dest={{ component_dir_name }}/app/config/sp.key owner={{ component_owner }} mode={{ component_mode_400 }}

- name: Write SP certificate
  copy: content="{{ gateway_saml_sp_publickey }}" dest={{ component_dir_name }}/app/config/sp.crt group={{ component_group }} mode={{ component_mode_640 }}

- name: Write SP Tiqr private key
  copy: content="{{ gateway_tiqr_sp_privatekey | vault(vault_keydir) }}" dest={{ component_dir_name }}/app/config/sp_tiqr.key owner={{ component_owner }} mode={{ component_mode_400 }}

- name: Write SP Tiqr certificate
  copy: content="{{ gateway_tiqr_sp_publickey }}" dest={{ component_dir_name }}/app/config/sp_tiqr.crt  group={{ component_group }} mode={{ component_mode_640 }}

- name: Write IdP private key
  copy: content="{{ gateway_saml_idp_privatekey | vault(vault_keydir) }}" dest={{ component_dir_name }}/app/config/idp.key owner={{ component_owner }} mode={{ component_mode_400 }}

- name: Write IdP certificate
  copy: content="{{ gateway_saml_idp_publickey }}" dest={{ component_dir_name }}/app/config/idp.crt group={{ component_group }} mode={{ component_mode_640 }}

- name: Write IdP Tiqr private key
  copy: content="{{ gateway_tiqr_idp_privatekey | vault(vault_keydir) }}" dest={{ component_dir_name }}/app/config/idp_tiqr.key owner={{ component_owner }} mode={{ component_mode_400 }}

- name: Write IdP Tiqr certificate
  copy: content="{{ gateway_tiqr_idp_publickey }}" dest={{ component_dir_name }}/app/config/idp_tiqr.crt group={{ component_group }} mode={{ component_mode_640 }}

# U2F support for facets:
- name: Set U2F app-id directory rights
  file: path={{ component_dir_name }}/web/u2f state=directory group={{ component_group }} mode={{ component_mode_755 }}

- name: Put facet ids
  template: src=app-id.json.j2 dest={{ component_dir_name }}/web/u2f/app-id group={{ component_group }} mode={{ component_mode_644 }}


- name: Put middleware configuration scripts in /root/
  template: src={{ item }}.j2 dest=/root/{{ item }} group=root owner=root mode="500"
  with_items:
  - "01-gateway-db_migrate.sh"


- name: Set stepup directory rights
  file: path={{ component_dir_name }} state=directory group={{ component_group }} mode={{ component_mode_755 }}


- name: Activate component
  file: src={{ component_dir_name }} dest=/opt/www/{{ gateway_vhost_name }} state=link


- name: Show database configuration hint
  debug:
    msg: "Note: Database initialisation/migration must be run manually once. Run '/root/01-gateway-db_migrate.sh' on an app server."