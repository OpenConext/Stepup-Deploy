parameters:
    trusted_proxies:   [ 127.0.0.1 ]

    mailer_transport:  smtp
    mailer_host:       127.0.0.1
    mailer_user:       ~
    mailer_password:   ~

    default_locale:       {{ default_locale }}
    locales:              [{{ enabled_locales | join(",") }}]
    locale_cookie_domain: {{ locale_cookie_domain }}

    secret:               {{ selfservice_secret | vault(vault_keydir) }}

    debug_toolbar:          true
    debug_redirects:        false
    use_assetic_controller: true

{# Note: Gateway API acces over HTTP #}
{# gateway vhost ip is set in /etc/hosts #}
    gateway_api_url: http://{{ gateway_vhost_name }}/
    gateway_api_username: ss
    gateway_api_password: {{ selfservice_api_password | vault(vault_keydir) }}

    middleware_credentials_username: ss
    middleware_credentials_password: {{ selfservice_api_password | vault(vault_keydir) }}

{# Note: Middleware API acces over HTTP #}
{# middleware vhost ip is set in /etc/hosts #}
    middleware_url_command_api: http://{{ middleware_vhost_name }}/command
    middleware_url_api: http://{{ middleware_vhost_name }}/

    sms_originator: {{ sms_originator }}
    sms_otp_expiry_interval: {{ sms_otp_expiry_interval }}
    sms_maximum_otp_requests: {{ sms_maximum_otp_requests }}

    saml_sp_publickey: {{ component_config_file_dir_name }}/sp.crt

    saml_sp_privatekey: {{ component_config_file_dir_name }}/sp.key

    saml_metadata_publickey: {{ component_config_file_dir_name }}/sp.crt

    saml_metadata_privatekey: {{ component_config_file_dir_name }}/sp.key

    # Connect to remote IdP through Stepup Gateway
    saml_remote_idp_entity_id: https://{{ gateway_vhost_name }}/authentication/metadata
    saml_remote_idp_sso_url: https://{{ gateway_vhost_name }}/authentication/single-sign-on
    saml_remote_idp_certificate: {{ gateway_saml_idp_publickey | depem }}

{#
    # Connect to remote IdP directly
    saml_remote_idp_entity_id: {{ saml_remote_idp_entity_id }}
    saml_remote_idp_sso_url: {{ saml_remote_idp_sso_url }}
    saml_remote_idp_certificate: {{ saml_remote_idp_certificate }}
#}

    second_factor_test_idp_entity_id: https://{{ gateway_vhost_name }}/authentication/metadata
    second_factor_test_idp_sso_url: https://{{ gateway_vhost_name }}/authentication/single-sign-on
    second_factor_test_idp_certificate: {{ gateway_saml_idp_publickey | depem }}

    asset_version: {{ stable_nonce }}

    stepup_loa_loa1: {{ stepup_uri_loa1 }}
    stepup_loa_loa2: {{ stepup_uri_loa2 }}
    stepup_loa_loa3: {{ stepup_uri_loa3 }}

    logout_redirect_url:
{% for key, value in logout_redirect_url.items() %}
        {{ key }}: {{ value }}
{% endfor %}

    enabled_second_factors: [ {{ stepup_enabled_factors }} ]

    enabled_generic_second_factors:
{% for key, value in stepup_enabled_generic_second_factors.items() %}
        {{ key }}:
            loa: {{ value.loa }}
{% endfor %}

    u2f_app_id: https://{{ gateway_vhost_name }}/u2f/app-id

    tiqr_app_android_url: https://play.google.com/store/apps/details?id=org.tiqr.authenticator&hl=en
    tiqr_app_ios_url: https://itunes.apple.com/us/app/tiqr/id430838214?mt=8&ls=1

    session_max_absolute_lifetime: {{ app_session_max_duration }}
    session_max_relative_lifetime: {{ app_session_expiry_time }}


    # remote vetting specific settings
    remote_vetting_idps:
{% for key, value in ss_remote_vetting_idps.items() %}
    - slug: "{{ key }}"
      name: "{{ value.name }}"
      logo: "{{ value.logo }}"
      description:
{% for k, v in value.description.items() %}
          "{{ k }}": "{{ v }}"
{% endfor %}
      entityId: "{{ value.entity_id }}"
      ssoUrl: "{{ value.sso_url }}"
      certificateFile: "{{ component_config_file_dir_name }}/{{ key }}_sp.crt"
      privateKey: "{{ component_dir_name }}/src/Surfnet/StepupSelfService/SelfServiceBundle/Tests/Resources/test.key"
      attributeMapping:
{% for k, v in value.attribute_mapping.items() %}
        "{{ k }}": "{{ v }}"
{% endfor %}
{% endfor %}

{% if 'dev' in group_names %}
    - slug: mock
      name: 'Mock IDP'
      logo: /images/remote-vetting/mock.png
      description:
          nl_NL: 'This is an integration test IdP.'
          en_GB: 'This is an integration test IdP.'
      entityId: 'https://selfservice.stepup.example.com/mock/metadata'
      ssoUrl: 'https://selfservice.stepup.example.com/second-factor/mock/sso'
      certificateFile: '%saml_rv_publickey%'
      privateKey: '%saml_rv_privatekey%'
      attributeMapping:
          givenName: firstName
          surname: lastName
{% endif %}

    identity_encryption_configuration:
      # The public key used to encrypt the remote vetting user data. The private key matching this is used to decrypt,
      # but is not configured in the application. The application can not be used to decrypt the data.
      encryption_public_key: |
        {{ ss_encryption_public_key | indent(8, False) }}

      # The location on disk where the encrypted remote vetting user data is stored
      storage_location: "/opt/remote-vetting-log"

    saml_rv_privatekey: "{{ component_config_file_dir_name }}/remote_vetting_sp.key"
    saml_rv_publickey: "{{ component_config_file_dir_name }}/remote_vetting_sp.crt"