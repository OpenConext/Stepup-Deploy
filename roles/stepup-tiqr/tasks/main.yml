# Infra stuff for tiqr IDP

- name: Get active component
  shell: readlink /opt/www/{{ component_name }}.{{ app_domain }}
  ignore_errors: true
  register: active_component

- debug:
    msg: "Currently installed component: {{ active_component.stdout }}; Component to be installed: {{ component_dir_name }}; Asset version: {{ stable_nonce }}"

- name: Check whether component is installed
  fail: msg="Component already active"
  when: ( 0 ) and ( component_dir_name != active_component.stdout)

- name: Create tiqr database
  mysql_db: name={{ database_tiqr_name }} state=present login_user=root login_password={{ mariadb_root_password | vault(vault_keydir) }}

# TODO change db host
- name: Create tiqr user
  mysql_user:
    host=127.0.0.1
    name={{ database_tiqr_user }}
    password={{ database_tiqr_password | vault(vault_keydir) }}
    priv={{ database_tiqr_name }}.*:SELECT,INSERT,DELETE,EXECUTE,UPDATE
    login_user=root
    login_password={{ mariadb_root_password | vault(vault_keydir) }}


# Unused for now
- name: Create deploy user with access to tiqr database
  mysql_user:
    host=127.0.0.1
    name={{ database_deploy_user }}
    password={{ database_deploy_password | vault(vault_keydir) }}
    priv={{ database_tiqr_name }}.*:ALL
    login_user=root
    login_password={{ mariadb_root_password | vault(vault_keydir) }}


- name: Create stepup-tiqr directory
  file: path={{ component_dir_name }} state=directory mode=a+rx

- name: Untar component
  unarchive: copy=yes src={{ component_tarball_name }} dest={{ component_dir_name }}
  when: ( {{ component_unarchive | default(1) }} == 1)

# config stuff

- name: Put local config
  template: src=local_config.j2 dest={{ component_dir_name }}/local_config.php

- name: Grant app write access to log dirs (similar to symfony2 apps)
  file: path={{item}} owner=tiqr recurse=yes
  with_items:
  - "{{ component_dir_name }}/app/logs"

# Finish

- name: Set stepup directory rights
  file: path={{ component_dir_name }} state=directory mode=a+rx

- name: Activate component
  file: src={{ component_dir_name }} dest=/opt/www/{{ component_name }}.{{ app_domain }} state=link
