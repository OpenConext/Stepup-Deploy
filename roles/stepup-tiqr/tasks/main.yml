---
# Install tiqr component
# TODO: Test!

- name: Put parameters YAML config
  template:
    src: "{{ item }}.yml.j2"
    dest: "{{ component_config_dir_name }}/{{ item }}.{{ component_config_yaml_extension }}"
    mode: "{{ component_mode_640 }}"
    group: "{{ component_group }}"
  with_items:
    - parameters

- name: Put images from <env>/files/stepup-app into web/images
  copy: src={{ item }} dest={{ component_dir_name }}/web/images/ mode={{ component_mode_444 }} group={{ component_group }}
  with_fileglob:
  - "{{inventory_dir }}/files/stepup-app/images/*"
  when: deploy_symfony_3

- name: Put images from <env>/files/stepup-app into /public/images/
  copy: src={{ item }} dest={{ component_dir_name }}/public/images/ mode={{ component_mode_444 }} group={{ component_group }}
  with_fileglob:
  - "{{inventory_dir }}/files/stepup-app/images/*"
  when: deploy_symfony_4

# Deploy does change file rights in config, so run deploy first, then write files
- name: Deploy tiqr component
  include_role:
    name: deploy
    tasks_from: deploy

# Tiqr symfony 3 version uses symfony 4 cache and log location
- name: Grant app write access to cache and log dirs
  file: path={{item}} group={{ component_group }} mode={{ component_mode_770 }} recurse=yes
  with_items:
    - "{{ component_dir_name }}/var/cache"
    - "{{ component_dir_name }}/var/logs"
  when: deploy_symfony_3

- name: Write tiqr APNS certificate
  copy: content="{{ tiqr_apns_pemfile | vault(vault_keydir) }}" dest={{ component_config_file_dir_name }}/apns.pem owner={{ component_owner }} mode={{ component_mode_400 }}
  when: tiqr_apns_pemfile is defined

# TODO: Put cert in config. Hint: {{ gateway_tiqr_sp_publickey | depem }}
- name: Write tiqr sp certificate
  copy: content="{{ gateway_gssp_sp_publickey }}" dest={{ component_config_file_dir_name }}/gateway.crt group={{ component_group }} mode={{ component_mode_640 }}

- name: Write tiqr idp certificate
  copy: content="{{ tiqr_idp_publickey }}" dest={{ component_config_file_dir_name }}/cert.pem group={{ component_group }} mode={{ component_mode_640 }}

- name: Write tiqr idp private key
  copy: content="{{ tiqr_idp_privatekey | vault(vault_keydir) }}" dest={{ component_config_file_dir_name }}/key.pem owner={{ component_owner }} mode={{ component_mode_400 }}


- name: Activate tiqr component
  include_role:
    name: deploy
    tasks_from: activate

# include ../../deploy/cleanup.yml
- name: Clean old releases
  include_role:
    name: deploy
    tasks_from: cleanup

- name: Put tiqr configuration script in /root/
  template: src={{ item }}.j2 dest=/root/{{ item }} group=root owner=root mode="500"
  with_items:
  - "01-tiqr-db_init.sh"

- name: Show database configuration hint
  debug:
    msg: "Note: Database initialisation/migration must be run manually once. Run '/root/01-tiqr-db_init.sh' on an app server."
