# Set to 1 to encrypt all keys, secrets and passwords with a symmetric key using keyszar.
# Requires python keyszar to be installed (https://github.com/google/keyczar)
# Set to 0 to write keys, secrets and passwords in plaintext.
USE_KEYSZAR=0

# Name of the keystore dir in the environment
KEYSTORE_DIR="stepup-ansible-keystore"

# Length of generated passwords in characters
PASSWORD_LENGTH=15
# List of passwords to generate. Specify the filename of the password file to create. Passwords are
# stored in the "password" directory
PASSWORDS=(
  "middleware_selfservice_api"
  "middleware_registration_authority_api"
  "middleware_management_api"
  "mariadb_root"
  "mariadb_cluster"
  "mariadb_backup"
  "database_gateway"
  "database_middleware_deploy"
  "database_middleware"
  "database_keyserver_deploy"
  "database_keyserver"
  "database_tiqr"
  "database_tiqr_deploy"
  "manage_kibana")

# Length of generated secrets in characters
SECRET_LENGTH=40
# List of secrets to generate. Specify the filename of the secret file to create. Secrets are
# stored in the "secret" directory
SECRETS=(
  "gateway"
  "middleware"
  "ra"
  "selfservice"
  "tiqr"
  "keyserver"
  "oath_keyserver")


SAML_O="Development VM"

# List of self signed certificates to generate. Format: "<basename>:<DN>"
# Where:
# - <filename> is the basename used for the certificate an key on disk
# - <DN> is the distinguised name of the certificate in OpenSSL format
SAML_CERTS=(
  "gateway_saml_idp:/CN=Gateway SAML IdP/O=${SAML_O}"
  "gateway_saml_sp:/CN=Gateway SAML SP/O=${SAML_O}"
  "gateway_tiqr_idp:/CN=Gateway Tiqr IdP/O=${SAML_O}"
  "gateway_tiqr_sp:/CN=Gateway Tiqr SP/O=${SAML_O}"
  "selfservice_saml_sp:/CN=SelfService SAML SP/O=${SAML_O}"
  "selfservice_tiqr_sp:/CN=SelfService Tiqr SP/O=${SAML_O}"
  "ra_saml_sp:/CN=RA SAML SP/O=${SAML_O}"
  "ra_tiqr_sp:/CN=RA Tiqr SP/O=${SAML_O}"
  "tiqr_idp:/CN=RA Tiqr IdP/O=${SAML_O}")

SSL_DOMAIN='stepup.example.com' # Domain for SSL certs
SSL_O='Development VM' # Organisation for SSL certs
SSL_C='NL' # Country for SSL certs

# Distinguised name of the Root CA certificate for issuing the SSL certificates
SSL_ROOT_DN="/CN=/Root CA/O=${SSL_O}/C=${SSL_C}" # DN for SSL root CA

# List of SSL/TLS certificates to generate. Format: "<basename>:<DN>"
# Where:
# - <filename> is the basename used for the certificate an key on disk
# - <DN> is the subject distinguished name of the certificate in OpenSSL format
SSL_CERTS=(
  "gateway:/CN=gateway.${SSL_DOMAIN}/O=${SSL_O}/C=${SSL_C}"
  "ra:/CN=ra.${SSL_DOMAIN}/O=${SSL_O}/C=${SSL_C}"
  "selfservice:/CN=selfservice.${SSL_DOMAIN}/O=${SSL_O}/C=${SSL_C}"
  "manage:/CN=manage.${SSL_DOMAIN}/O=${SSL_O}/C=${SSL_C}"
  "middleware:/CN=middleware.${SSL_DOMAIN}/O=${SSL_O}/C=${SSL_C}"
  "tiqr:/CN=tiqr.${SSL_DOMAIN}/O=${SSL_O}/C=${SSL_C}"
  "keyserver:/CN=keyserver.${SSL_DOMAIN}/O=${SSL_O}/C=${SSL_C}")